{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Card from \"./Card\";\n// import \"../styles/CardList.css\";\n// function CardList() {\n//   const [cards, setCards] = useState([]);\n//   useEffect(() => {\n//     const fetchCards = async () => {\n//       try {\n//         const response = await fetch(\"/api/help-center\"); // Relative URL assuming the frontend and backend are served from the same origin\n//         const data = await response.json();\n//         setCards(data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchCards();\n//   }, []);\n//   return (\n//     <div className=\"card-list\">\n//       {cards.length > 0 ? (\n//         cards.map((card) => (\n//           <Card\n//             key={card.id}\n//             title={card.title}\n//             description={card.description}\n//           />\n//         ))\n//       ) : (\n//         <p>No cards available.</p>\n//       )}\n//     </div>\n//   );\n// }\n// export default CardList;\nimport React from\"react\";import Card from\"./Card\";import\"../styles/CardList.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function CardList(_ref){let{cards}=_ref;if(cards.length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"No cards available\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"card-list\",children:cards.map(card=>/*#__PURE__*/_jsx(Card,{title:card.title,description:card.description},card.id))});}export default CardList;","map":{"version":3,"names":["React","Card","jsx","_jsx","CardList","_ref","cards","length","children","className","map","card","title","description","id"],"sources":["C:/Users/91955/OneDrive/Desktop/help-centre/frontend/src/components/CardList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Card from \"./Card\";\r\n// import \"../styles/CardList.css\";\r\n\r\n// function CardList() {\r\n//   const [cards, setCards] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCards = async () => {\r\n//       try {\r\n//         const response = await fetch(\"/api/help-center\"); // Relative URL assuming the frontend and backend are served from the same origin\r\n//         const data = await response.json();\r\n//         setCards(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCards();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"card-list\">\r\n//       {cards.length > 0 ? (\r\n//         cards.map((card) => (\r\n//           <Card\r\n//             key={card.id}\r\n//             title={card.title}\r\n//             description={card.description}\r\n//           />\r\n//         ))\r\n//       ) : (\r\n//         <p>No cards available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CardList;\r\n\r\nimport React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"../styles/CardList.css\";\r\n\r\nfunction CardList({ cards }) {\r\n  if (cards.length === 0) {\r\n    return <p>No cards available</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card-list\">\r\n      {cards.map((card) => (\r\n        <Card key={card.id} title={card.title} description={card.description} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhC,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAY,IAAX,CAAEC,KAAM,CAAC,CAAAD,IAAA,CACzB,GAAIC,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CACtB,mBAAOJ,IAAA,MAAAK,QAAA,CAAG,oBAAkB,CAAG,CAAC,CAClC,CAEA,mBACEL,IAAA,QAAKM,SAAS,CAAC,WAAW,CAAAD,QAAA,CACvBF,KAAK,CAACI,GAAG,CAAEC,IAAI,eACdR,IAAA,CAACF,IAAI,EAAeW,KAAK,CAAED,IAAI,CAACC,KAAM,CAACC,WAAW,CAAEF,IAAI,CAACE,WAAY,EAA1DF,IAAI,CAACG,EAAuD,CACxE,CAAC,CACC,CAAC,CAEV,CAEA,cAAe,CAAAV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}